# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
swagger: '2.0'

info:
  title: Codewars API
  version: '1'
  description: |
    The [Codewars](https://www.codewars.com) API is organized around REST.
    Our API is designed to have predictable, resource-oriented URLs and to use HTTP response codes to indicate API errors.
    We use built-in HTTP features, like HTTP authentication and HTTP verbs.
    JSON will be returned in all responses from the API, including errors.

    # Authentication

    Codewars uses API access keys to allow access to restricted endpoints.
    Access keys are specific to a user account and can be found by navigating to your [Account Settings ](https://www.codewars.com/users/edit).

    It can be included either via a header:

    `Authorization: {API ACCESS TOKEN}`

    or by passing it as a parameter:

    `?access_key={API ACCESS TOKEN}`

    # Errors

    Codewars uses conventional HTTP response codes to indicate success or failure of an API request.
  x-logo:
    url: https://kazk.github.io/docs.codewars.com/assets/img/logo.png

host: www.codewars.com
basePath: /api/v1
schemes:
- http
- https
consumes:
- application/json
produces:
- application/json

tags:
  - name: users
    description: Operations about user
  - name: code_challenges
    x-displayName: Code Challenges
    description: Code Challenges

definitions:
  User:
    type: object
    properties:
      username:
        description: Username
        type: string
      url:
        description: Profile URL
        type: string

  UserInfo:
    type: object
    properties:
      username:
        type: string
        example: jhoffner
      name:
        type: string
        defaultValue: ""
        example: Jake Hoffner
      honor:
        type: integer
        format: int32
        description: Earned honor points
        example: 25130
      clan:
        type: string
        description: Clan (company, school or organization)
        example: Codewars
      leaderboardPosition:
        type: integer
        format: int32
        description: Position on the [overall leaderboard](https://www.codewars.com/users/leaderboard)
        example: 9
      skills:
        type: array
        items:
          type: string
      ranks:
        type: object
        properties:
          overall:
            $ref: '#/definitions/Progress'
          language:
            type: object
            description: Map of language name as a key and Progress as a value.
            additionalProperties:
              $ref: '#/definitions/Progress'
      codeChallenges:
        type: object
        properties:
          totalAuthored:
            description: Number of authored code challenges
            type: integer
            format: int32
          totalCompleted:
            description: Number of completed code challenges
            type: integer
            format: int32
    example:
      username: "jhoffner"
      name: "Jake Hoffner"
      honor: 25130
      clan: "Codewars"
      leaderboardPosition: 9
      skills:
      - "ruby"
      - "c#"
      - ".net"
      - "javascript"
      - "coffeescript"
      - "nodejs"
      - "rails"
      ranks:
        overall:
          rank: -3
          name: "3 kyu"
          color: "blue"
          score: 2889
        languages:
          coffeescript:
            rank: -4
            name: "4 kyu"
            color: "blue"
            score: 868
          java:
            rank: -6
            name: "6 kyu"
            color: "yellow"
            score: 79
          haskell:
            rank: -6
            name: "6 kyu"
            color: "yellow"
            score: 76
          typescript:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 3
          csharp:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 5
          crystal:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 2
          javascript:
            rank: -3
            name: "3 kyu"
            color: "blue"
            score: 1936
          ruby:
            rank: -4
            name: "4 kyu"
            color: "blue"
            score: 1572
          python:
            rank: -6
            name: "6 kyu"
            color: "yellow"
            score: 92
          elixir:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 2
          sql:
            rank: -6
            name: "6 kyu"
            color: "yellow"
            score: 84
          shell:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 5
          objc:
            rank: -8
            name: "8 kyu"
            color: "white"
            score: 2
      codeChallenges:
        totalAuthored: 82
        totalCompleted: 388

  Progress:
    type: object
    properties:
      rank:
        type: integer
        format: int32
      name:
        $ref: '#/definitions/RankName'
      color:
        $ref: '#/definitions/RankColor'
      score:
        type: integer
        format: int32

  # users/{user}/code-challenges/authored
  AuthoredCodeChallenge:
    type: object
    properties:
      id:
        description: ID
        type: string
      name:
        description: Name
        type: string
      description:
        description: Description
        type: string
      rank:
        $ref: '#/definitions/CodeChallengeRankID'
      rankName:
        $ref: '#/definitions/CodeChallengeRankName'
      tags:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
    example:
      id: 5571d9fc11526780a000011a
      name: 'The builder of things'
      description: |
        For this kata you will be using some meta-programming magic to create a new `Thing` object.
        This object will allow you to define things in a descriptive **sentence like format**.
      rank: -2
      rankName: '2 kyu'
      tags:
      - Algorithms
      - Metaprogramming
      - Programming Paradigms
      - Advanced Language Features
      - Fundamentals
      - Domain Specific Languages
      - Declarative Programming
      languages:
      - ruby
      - javascript
      - python

  # users/{user}/code-challenges/completed
  CompletedCodeChallenge:
    type: object
    properties:
      id:
        description: ID
        type: string
        example: '50654ddff44f800200000004'
      name:
        description: Name
        type: string
        example: Multiply
      slug:
        description: Slug
        type: string
        example: multiply
      completedLanguages:
        description: Languages used to complete the challenge
        type: array
        items:
          type: string
        example:
        - javascript
        - java
        - python
      completedAt:
        description: Completed at
        type: string
        format: date-time
        example: '2013-06-01T17:58:27Z'

  # code-challenges/{name}
  CodeChallengeInfo:
    type: object
    properties:
      id:
        description: ID
        type: string
      name:
        description: Name
        type: string
      slug:
        description: Slug
        type: string
      url:
        description: URL
        type: string
      description:
        description: Code challenge description
        type: string
      category:
        description: Category
        type: string

      publishedAt:
        description: Published At
        type: string
        format: date-time
      createdAt:
        description: Created At
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/User'

      approvedAt:
        description: Approved At
        type: string
        format: date-time
      approvedBy:
        $ref: '#/definitions/User'

      totalAttempts:
        description: Submission count
        type: integer
        format: int32
      totalCompleted:
        description: Completion count
        type: integer
        format: int32
      totalStars:
        description: Starred count
        type: integer
        format: int32
      voteScore:
        description: Vote score
        type: integer
        format: int32
      contributorsWanted:
        type: boolean
      rank:
        type: object
        properties:
          id:
            $ref: '#/definitions/CodeChallengeRankID'
          name:
            $ref: '#/definitions/CodeChallengeRankName'
          color:
            $ref: '#/definitions/CodeChallengeRankColor'
      tags:
        description: Tags
        type: array
        items:
          type: string
      languages:
        description: Languages
        type: array
        items:
          type: string
      unresolved:
        type: object
        properties:
          issues:
            description: Number of unresolved issues
            type: integer
            format: int32
          suggestions:
            description: Number of unresolved suggestions
            type: integer
            format: int32
    example:
      id: 5571d9fc11526780a000011a
      name: 'The builder of things'
      slug: the-builder-of-things
      category: algorithms
      publishedAt: '2015-06-05T17:47:05Z'
      approvedAt: '2017-03-14T22:19:53Z'
      languages:
      - ruby
      - javascript
      - python
      url: 'https://www.codewars.com/kata/the-builder-of-things'
      rank:
        id: -2
        name: '2 kyu'
        color: purple
      createdAt: '2015-06-05T17:18:52Z'
      createdBy:
        username: jhoffner
        url: 'https://www.codewars.com/users/jhoffner'
      approvedBy:
        username: jhoffner
        url: 'https://www.codewars.com/users/jhoffner'
      description: |-
        For this kata you will be using some meta-programming magic to create a new `Thing` object.
        This object will allow you to define things in a descriptive **sentence like format**.
      totalAttempts: 1034
      totalCompleted: 74
      totalStars: 53
      voteScore: 40
      tags:
      - Algorithms
      - Metaprogramming
      - Programming Paradigms
      - Advanced Language Features
      - Fundamentals
      - Domain Specific Languages
      - Declarative Programming
      contributorsWanted: true
      unresolved:
        issues: 0
        suggestions: 0

  Error:
    type: object
    properties:
      success:
        type: boolean
      reason:
        type: string
    example:
      success: false
      reason: "not found"

  CodeChallengeRankID:
    description: Rank ID
    type: integer
    format: int32
    x-nullable: true

  CodeChallengeRankName:
    description: Code challenge rank name
    type: string
    x-nullable: true
    enum:
      - 1 kyu
      - 2 kyu
      - 3 kyu
      - 4 kyu
      - 5 kyu
      - 6 kyu
      - 7 kyu
      - 8 kyu

  CodeChallengeRankColor:
    description: Code challenge rank color
    type: string
    x-nullable: true
    enum:
      - purple
      - blue
      - yellow
      - white

  CodeChallengeCategory:
    description: Code challenge category
    type: string
    enum:
      - bug_fixes
      - fundamentals
      - algorithms
      - games

  RankID:
    deescription: User rank ID
    type: integer
    format: int32

  RankName:
    description: User rank name
    type: string
    enum:
      - 2 dan
      - 1 dan
      - 1 kyu
      - 2 kyu
      - 3 kyu
      - 4 kyu
      - 5 kyu
      - 6 kyu
      - 7 kyu
      - 8 kyu

  RankColor:
    description: User rank color
    type: string
    enum:
      - black
      - purple
      - blue
      - yellow
      - white

parameters:
  userParam:
    type: string
    name: user
    in: path
    description: ID or username
    required: true
  challengeParam:
    type: string
    name: challenge
    in: path
    description: ID or slug
    required: true

securityDefinitions:
  Authorization:
    type: apiKey
    name: Authorization
    in: header
  access_key:
    type: apiKey
    name: access_key
    in: query

responses:
  '200':
    description: Success

  '400':
    description: Bad Request – Something went wrong
  '401':
    description: Unauthorized – Your API key is wrong
  '403':
    description: Forbidden – You do not have permission to access this resource
  '404':
    description: Not Found – The specified resource could not be found
  '405':
    description: Method Not Allowed – You tried to access a resource with an invalid method
  '406':
    description: Not Acceptable – You requested a format that isn’t json
  '422':
    description: Unprocessable Entity – Your input failed validation.
  '429':
    description: Too Many Requests – You’re making too many API requests.

  '500':
    description: Internal Server Error – We had a problem with our server. Try again later.
  '503':
    description: Service Unavailable – We’re temporarily offline for maintenance. Please try again later.

paths:
  /users/{user}:
    get:
      summary: Get user information
      description: |-
        Returns information about `user`.
      operationId: getUser
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserInfo'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      x-code-samples:
        - lang: curl
          source: |
            curl "https://www.codewars.com/api/v1/users/jhoffner"

  /users/{user}/code-challenges/authored:
    get:
      summary: Get authored code challenges
      description: |-
        Returns a list of all code challenges authored by `user`.
      operationId: getAuthoredCodeChallenges
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AuthoredCodeChallenge'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      x-code-samples:
        - lang: curl
          source: |
            curl "https://www.codewars.com/api/v1/users/jhoffner/code-challenges/authored"

  /users/{user}/code-challenges/completed:
    get:
      summary: Get completed code challenges
      description: |-
        Returns a list of code challenges completed by `user`.
        By default only the first 200 code challenges will be returned.
        You can page the results using the `page` parameter.
      operationId: getCompletedCodeChallenges
      produces:
        - application/json
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
        - in: query
          name: page
          type: integer
          required: false
          default: 0
          description: Pagination offset (zero-based)
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              totalPages:
                description: Number of pages
                type: integer
                format: int32
                example: 1
              totalItems:
                description: Number of completed challenges
                type: integer
                format: int32
                example: 1
              data:
                description: Array of completed challenges
                type: array
                items:
                  $ref: '#/definitions/CompletedCodeChallenge'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      x-code-samples:
        - lang: curl
          source: |
            curl "https://www.codewars.com/api/v1/users/jhoffner/code-challenges/completed"

  /code-challenges/{challenge}:
    get:
      summary: Get code challenge information
      description: |-
        Returns information about `challenge`.
      operationId: getCodeChallenge
      tags:
        - code_challenges
      parameters:
        - $ref: '#/parameters/challengeParam'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CodeChallengeInfo'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      x-code-samples:
        - lang: curl
          source: |
            curl "https://www.codewars.com/api/v1/code-challenges/the-builder-of-things"
